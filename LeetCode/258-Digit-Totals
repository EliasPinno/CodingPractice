class Solution:
    def addDigits(self, num: int) -> int:
      if num < 10:
        return num
      else:
        nextNumTotal = 0
        while num > 0:
          nextNumTotal += num % 10
          num = num // 10
        return self.addDigits(nextNumTotal)
# O(k) where k is the number of digits of the initial number. Technically a little more
# O(j) where j is the number of recursive stacks

    def addDigits(self, num: int) -> int:
        if num == 0:
            return 0
        digitSum = num % 9
        if digitSum == 0:
            return 9
        else: 
            return digitSum
# O(1) for any number size